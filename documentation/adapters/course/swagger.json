{
    "openapi": "3.0.1",
    "info": {
        "title": "",
        "description": "",
        "termsOfService": "",
        "version": "0.2"
    },
    "servers": [
        {
            "url": "http://localhost:8790"
        }
    ],
    "security": [ ],
    "paths": {
        "/info": {
            "get": {
                "summary": "Returns course adapter info.",
                "description": "Returns information about the course data adapter.",
                "operationId": "getInfoRoute",
                "responses": {
                    "200": {
                        "description": "The information fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseAdapterInfoResponse"
                                },
                                "examples": {
                                    "Example response": {
                                        "description": "Example response",
                                        "value": {
                                            "componentName": "adapter-course",
                                            "componentType": "adapter",
                                            "adapterType": "Course",
                                            "version": "0.1",
                                            "startTime": "2021-09-01T12:00:00.000Z",
                                            "apiAddress": "localhost:8790",
                                            "swaggerDefinition": "/api-docs/swagger.json"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/data": {
            "get": {
                "summary": "Returns a points document.",
                "description": "Returns a document related to points achieved by a student.",
                "operationId": "getDataRoute",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "query",
                        "description": "the course id (must be a positive integer)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "the username of the student",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exerciseId",
                        "in": "query",
                        "description": "the exercise id (must be a positive integer)",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The data successfully fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsObject"
                                },
                                "examples": {
                                    "example response": {
                                        "description": "example response",
                                        "value": {
                                            "results": [
                                                {
                                                    "commits": [
                                                        {
                                                            "module_name": "01",
                                                            "projects": [
                                                                {
                                                                    "name": "first",
                                                                    "commit_count": 1,
                                                                    "commit_meta": [
                                                                        {
                                                                            "hash": "qwertyuiopasdfghjklzxcvbnm",
                                                                            "message": "example commit message",
                                                                            "commit_date": "2020-01-01T12:00:00.000Z",
                                                                            "committer_email": "8ad125d39ece9c723a4472953f831073520da8a11a67ab173417803a5c677cba"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ],
                                                    "email": "76974fd56f61d64b67fcad19628cdb237ded5e576d7c0b88d86d2a4cdc454d95",
                                                    "full_name": "8ab585e7025862477fd41d2b4edaad802f8197fb60c3d01a2643f18f9f863a37",
                                                    "id": 675187842,
                                                    "is_external": false,
                                                    "points": {
                                                        "points": 100,
                                                        "points_by_difficulty": {
                                                            "": 40,
                                                            "G": 20,
                                                            "P": 40
                                                        },
                                                        "submission_count": 5,
                                                        "modules": [
                                                            {
                                                                "id": 1234,
                                                                "max_points": 40,
                                                                "name": {
                                                                    "en": "First week",
                                                                    "fi": "Ensimmäinen viikko",
                                                                    "number": "1.",
                                                                    "raw": "1. |en:First week|fi:Ensimmäinen viikko|"
                                                                },
                                                                "passed": true,
                                                                "points": 40,
                                                                "points_by_difficulty": {
                                                                    "": 40
                                                                },
                                                                "points_to_pass": 0,
                                                                "submission_count": 1,
                                                                "exercises": [
                                                                    {
                                                                        "best_submission": "b23440fb5c09859b537b931aa66a17a125a571d07c16cc07c164d214b0e08d1c",
                                                                        "difficulty": "",
                                                                        "id": 112233,
                                                                        "max_points": 10,
                                                                        "name": {
                                                                            "en": "First",
                                                                            "fi": "Eka",
                                                                            "number": "1.2.1",
                                                                            "raw": "1.2.1 |fi:Eka|en:First|"
                                                                        },
                                                                        "official": true,
                                                                        "passed": true,
                                                                        "points": 10,
                                                                        "points_to_pass": 0,
                                                                        "submission_count": 1,
                                                                        "submissions": [
                                                                            "19cefd7f8cdf7c6b5be1ffe2446d30143a04d17f263475a4e835858e2b6e9142"
                                                                        ],
                                                                        "submissions_with_points": [
                                                                            {
                                                                                "grade": 10,
                                                                                "id": 117719610,
                                                                                "submission_time": "2020-09-18T15:02:17.006122Z"
                                                                            }
                                                                        ],
                                                                        "url": "https://plus.tuni.fi/api/v2/exercises/112233/?format=json"
                                                                    }
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "student_id": "325bf51df0ee884cb975f7d693975f5bafea8a9a08dc7d8fa7dee5cba3fadeee",
                                                    "url": "f9b50e17ba73484996942bf669aa79ba69addd2e886a550d59ee1be4c88b155c",
                                                    "username": "863bdff3f9d3228183f8e271c7a924d9ae09f4d9ba32c077981fdd889e9524ea"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained an invalid parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseProblem"
                                },
                                "examples": {
                                    "invalid course id": {
                                        "description": "invalid course id",
                                        "value": {
                                            "description": "Some query parameters contained invalid values",
                                            "status": "BadRequest"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseProblem"
                                },
                                "examples": {
                                    "Timeout response example": {
                                        "description": "Timeout response example",
                                        "value": {
                                            "status": "InternalServerError",
                                            "description": "Futures timed out after [30 seconds]"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/usernames": {
            "get": {
                "summary": "Returns a points document.",
                "description": "Returns a document related to points achieved by a student.",
                "operationId": "getUsernameRoute",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "query",
                        "description": "the course id (must be a positive integer)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The usernames successfully fetched",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JsObject"
                                },
                                "examples": {
                                    "example response": {
                                        "description": "example response",
                                        "value": {
                                            "results": [
                                                "863bdff3f9d3228183f8e271c7a924d9ae09f4d9ba32c077981fdd889e9524ea",
                                                "c6dd236aa217735693b327dfe01e3436623d4b7881ea9fd182c9e0d037601901"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The request contained an invalid parameter",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseProblem"
                                },
                                "examples": {
                                    "invalid course id": {
                                        "description": "invalid course id",
                                        "value": {
                                            "description": "Some query parameters contained invalid values",
                                            "status": "BadRequest"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ResponseProblem"
                                },
                                "examples": {
                                    "Timeout response example": {
                                        "description": "Timeout response example",
                                        "value": {
                                            "status": "InternalServerError",
                                            "description": "Futures timed out after [30 seconds]"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "JsValue": {
                "type": "object"
            },
            "JsObject": {
                "required": [
                    "fields"
                ],
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "object",
                        "properties": { },
                        "additionalProperties": {
                            "$ref": "#/components/schemas/JsValue"
                        }
                    }
                }
            },
            "CourseAdapterInfoResponse": {
                "required": [
                    "adapterType",
                    "apiAddress",
                    "componentName",
                    "componentType",
                    "startTime",
                    "swaggerDefinition",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "componentType": {
                        "type": "string"
                    },
                    "componentName": {
                        "type": "string"
                    },
                    "adapterType": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "startTime": {
                        "type": "string"
                    },
                    "apiAddress": {
                        "type": "string"
                    },
                    "swaggerDefinition": {
                        "type": "string"
                    }
                }
            },
            "ResponseProblem": {
                "required": [
                    "description",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            }
        }
    }
}
