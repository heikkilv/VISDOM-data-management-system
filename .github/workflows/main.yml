name: CI for VISDOM data management system

on:
    push:
        branches: [ master ]
        tags: [ 'v*.*.*' ]

    # Allows to run this workflow manually from the Actions tab
    workflow_dispatch:

env:
    REGISTRY: ghcr.io

jobs:

    static-analysis:
        runs-on: ubuntu-18.04
        steps:
            - uses: actions/checkout@v3

            - name: Setup Java JDK
              uses: actions/setup-java@v3.1.0
              with:
                  java-version: '8'
                  distribution: 'adopt'

            - name: Scalastyle analysis
              run: |
                cd scala
                sbt core/scalastyle dataBroker/scalastyle gitlabFetcher/scalastyle aPlusFetcher/scalastyle coreAdapter/scalastyle gitlabAdapter/scalastyle adapterCourse/scalastyle adapterGeneralModel/scalastyle adapterDataset/scalastyle

            - name: Scapegoat analysis
              run: sbt core/scapegoat dataBroker/scapegoat gitlabFetcher/scapegoat aPlusFetcher/scapegoat coreAdapter/scapegoat gitlabAdapter/scapegoat adapterCourse/scapegoat adapterGeneralModel/scapegoat adapterDataset/scapegoat

    unit-tests:
        needs: static-analysis
        runs-on: ubuntu-18.04
        steps:
            - uses: actions/checkout@v3

            - name: Setup Java JDK
              uses: actions/setup-java@v3.1.0
              with:
                  java-version: '8'
                  distribution: 'adopt'

            - name: Scala unit tests
              run: |
                cd scala
                sbt core/test

    docker-images:
        needs: unit-tests
        runs-on: ubuntu-18.04
        permissions:
            contents: read
            packages: write
            id-token: write

        steps:
            - uses: actions/checkout@v3

            # Workaround: https://github.com/docker/build-push-action/issues/461
            - name: Setup Docker buildx
              uses: docker/setup-buildx-action@v1.6.0

            # https://github.com/docker/login-action
            - name: Log into registry ${{ env.REGISTRY }}
              uses: docker/login-action@v1.14.1
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # https://github.com/docker/metadata-action
            - name: Extract Docker metadata for broker
              id: meta-broker
              uses: docker/metadata-action@v3.7.0
              with:
                  images: ${{ env.REGISTRY }}/${{ github.repository }}/broker

            # https://github.com/docker/build-push-action
            - name: Build and push Docker image for broker
              id: build-and-push-broker
              uses: docker/build-push-action@v2.10.0
              with:
                  context: scala
                  file: scala/Dockerfile-broker
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta-broker.outputs.tags }}
                  labels: ${{ steps.meta-broker.outputs.labels }}
